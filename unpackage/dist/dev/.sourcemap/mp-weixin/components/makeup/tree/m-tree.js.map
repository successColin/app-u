{"version":3,"sources":["webpack:///D:/code/2.0app/components/makeup/tree/m-tree.vue?b432","webpack:///D:/code/2.0app/components/makeup/tree/m-tree.vue?c0bd","webpack:///D:/code/2.0app/components/makeup/tree/m-tree.vue?3a49","webpack:///D:/code/2.0app/components/makeup/tree/m-tree.vue?071d","uni-app:///components/makeup/tree/m-tree.vue"],"names":["renderjs","component","options","__file","components","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped"],"mappings":";;;;2DAAA,gNACIA,EADJ,sKAQIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,KACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,oCACZ,aAAAF,E;;;;2GCtBf,inC;;;;2GCAA,IAAIG,EAAJ,0LACA,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G;;;;2DCRvB,gvBAAyrB,eAAG,G;;;;6HCsB5rB,0CACA,kBAGA,kC,o/BAEA,CACA,aACA,YACA,aAEA,OACA,yCAEA,iCACA,0BACA,qCACA,kBACA,uBACA,WACA,aACA,YAEA,UACA,aACA,YAEA,gCAEA,KAvBA,WAwBA,OACA,UACA,0BACA,YACA,YACA,eACA,iBACA,cACA,aACA,kBAGA,OACA,aADA,WAEA,qBAGA,eACA,qCAEA,cACA,kDADA,CAEA,SAFA,SAEA,GACA,2BAEA,mBAEA,mBAEA,qBAEA,iBAXA,WAYA,gCACA,oCACA,OACA,4BAEA,wCACA,oCACA,yDACA,QACA,iBACA,sDAGA,YAzBA,WA0BA,WACA,kBACA,wCACA,GACA,QACA,KACA,wBAEA,KACA,8BAEA,UACA,4BAEA,eACA,gBAEA,+EACA,aACA,wBACA,eAEA,iDAIA,+BACA,yEACA,aACA,wBACA,eAEA,oDAKA,QA3GA,WA4GA,oBAEA,QA9GA,WA+GA,6BACA,WACA,wBACA,qCACA,6BAGA,wBACA,2CACA,iBACA,sBACA,YACA,wBACA,0BAEA,oBACA,qBAEA,qBACA,0BACA,iBAGA,6CACA,iBAEA,GADA,sBACA,YACA,mEACA,6BACA,4BACA,8BAEA,mBACA,gBAEA,uBACA,0BACA,mB","file":"components/makeup/tree/m-tree.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./m-tree.vue?vue&type=template&id=180bdef8&\"\nvar renderjs\nimport script from \"./m-tree.vue?vue&type=script&lang=js&\"\nexport * from \"./m-tree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/makeup/tree/m-tree.vue\"\nexport default component.exports","export * from \"-!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./m-tree.vue?vue&type=template&id=180bdef8&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./m-tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../360安全浏览器下载/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./m-tree.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"mTree\">\r\n\t\t <m-tree-item v-for=\"(item, index) in treeList\" v-if=\"update\"\r\n\t\t\t:key=\"index\" \r\n\t\t\t:treeItem=\"item\"\r\n\t\t\t:dataSource=\"dataSource\" \r\n\t\t\t:elementMultiRelation=\"elementMultiRelation\"\r\n\t\t\t:asyncNode=\"asyncNode_\"\r\n\t\t\t:multiple=\"multiple\"\r\n\t\t\t:groupDataSource=\"groupDataSource\"\r\n\t\t\t:checkedIds = \"checkedIds\"\r\n\t\t\t:elementId=\"elementId\"\r\n\t\t\t:showType = \"showType\"\r\n\t\t\tcheckedColumn=\"id\"\r\n\t\t\topenColumn=\"nodekey\">\r\n\t\t</m-tree-item>\r\n\t\t<m-loading v-if=\"isLoading\" class=\"animated\"\r\n\t\t\t:class=\"[isLoading ? 'fadeIn':'fadeOut']\"></m-loading>\r\n\t</view>\n</template>\n\n<script>\r\n\timport {treeApi} from '@/common/request/api.js'\r\n\timport { mapState, mapMutations } from 'vuex'\r\n\timport mTreeItem from '@/components/makeup/tree/m-treeItem.vue';\r\n\t\r\n\timport bus from '@/static/js/bus'\r\n\r\n\texport default {\r\n\t    name: \"mTree\",\r\n\t\tcomponents: {\r\n\t\t\tmTreeItem\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\tancestorsIsNot:{type:Boolean,default:false},//是否不需要事先获取节点祖先\r\n\t\t\t//显示类型 1-名称；2-名称+编码；3-编码+名称；4-编码\r\n\t\t\tshowType:{type:Number,default:1},\r\n\t\t\telementId:[Number,String],\r\n\t\t\telementMultiRelation:[Number,String],\r\n\t\t\tdataSource:String,\r\n\t\t\tgroupDataSource:String,\r\n\t\t\tasyncNode:{//是否异步，默认false\r\n\t\t\t\ttype:Boolean,\r\n\t\t\t\tdefault:true\r\n\t\t\t},\r\n\t\t\tmultiple:{//是否多选\r\n\t\t\t\ttype:Boolean,\r\n\t\t\t\tdefault:false\r\n\t\t\t},\r\n\t\t\talreadyCheckId:[Number,String]\r\n\t\t},\r\n\t\tdata() { \r\n\t\t\treturn {\r\n\t\t\t\tupdate: true,\r\n\t\t\t\tasyncNode_:this.asyncNode,\r\n\t\t\t\tshowTree: false,\r\n\t\t\t\ttreeList: [],\r\n\t\t\t\tselectIndex: -1,\r\n\t\t\t\ttreeCheckNode:[],\r\n\t\t\t\tcheckedIds:[],\r\n\t\t\t\tisLoading:false,\r\n\t\t\t\tsearchParams:\"\"//搜索参数\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tsearchParams(){\r\n\t\t\t\tthis.getTreeData()\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t...mapState(\"Tree\",[\"ancestors\"])\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t...mapMutations(\"Tree\",[\"SETA_TREE_ANCESTORS\"]),\r\n\t\t\tdoSearch(params){//搜索\r\n\t\t\t\tif(params && JSON.stringify(params)!=\"{}\"){\r\n\t\t\t\t\t//一旦有搜索条件就转同步\r\n\t\t\t\t\tthis.asyncNode_ = false\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.asyncNode_ = true\r\n\t\t\t\t}\r\n\t\t\t\tthis.searchParams = params\r\n\t\t\t},\r\n\t\t\tgetNodeAncestors(){//获取祖先节点\r\n\t\t\t\tconst checkedIds = this.checkedIds.join(\",\"),\r\n\t\t\t\t\t  elementMultiRelation = Number(this.elementMultiRelation),\r\n\t\t\t\t\t  _this = this\r\n\t\t\t\tif(!checkedIds || this.ancestorsIsNot) return\r\n\t\t\t\t//id-值（只支持单选）dataSource-实体表 elementId-控件id\r\n\t\t\t\tlet param = {id:checkedIds,dataSource:this.dataSource}\r\n\t\t\t\tif(elementMultiRelation ===1) param.elementId = this.elementId //如果是多级实体传控件id\r\n\t\t\t\ttreeApi.currencyGetRootNodes(this, param).then(value => {\r\n\t\t\t\t\tvalue = value || {}\r\n\t\t\t\t\tconst ancestors = value.data || []\r\n\t\t\t\t\tif(ancestors.length>1) _this.SETA_TREE_ANCESTORS(ancestors.slice(0,-1))//设置该节点的祖先节点\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetTreeData(){\r\n\t\t\t\tconst _this = this\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\tlet elementMultiRelation = Number(this.elementMultiRelation)\r\n\t\t\t\tlet params = {\r\n\t\t\t\t\tgroup:1,\r\n\t\t\t\t\tid:0,\r\n\t\t\t\t\telementMultiRelation:elementMultiRelation,\r\n\t\t\t\t}\r\n\t\t\t\tif(elementMultiRelation!=1){\r\n\t\t\t\t\tparams.dataSource=this.dataSource\r\n\t\t\t\t}else{\r\n\t\t\t\t\tparams.type=\"\"\r\n\t\t\t\t\tparams.elementId = this.elementId\r\n\t\t\t\t}\r\n\t\t\t\tthis.update = false\r\n\t\t\t\tif(this.asyncNode_){\r\n\t\t\t\t\t//异步节点数\r\n\t\t\t\t\ttreeApi.currencyStandardSelectionBoxSingleTree(this, params,\"G\").then(value => {\r\n\t\t\t\t\t\t_this.treeList = value\r\n\t\t\t\t\t\t_this.$nextTick(() => {\r\n\t\t\t\t\t\t\t_this.update = true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetTimeout(() => { _this.isLoading = false }, 100)\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//整颗树\r\n\t\t\t\t\tparams = {...params, ...this.searchParams}\r\n\t\t\t\t\ttreeApi.currencyStandardSelectionBoxTree(this, params,\"G\").then(value => {\r\n\t\t\t\t\t\t_this.treeList = value\r\n\t\t\t\t\t\t_this.$nextTick(() => {\r\n\t\t\t\t\t\t\t_this.update = true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetTimeout(() => { _this.isLoading = false }, 100)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\tthis.getTreeData()\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.SETA_TREE_ANCESTORS([])\r\n\t\t\tconst _this = this\r\n\t\t\tif(this.alreadyCheckId){\r\n\t\t\t\tconst alreadyCheckId = `${this.alreadyCheckId}`\r\n\t\t\t\tthis.checkedIds = alreadyCheckId.split(\",\")\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tthis.getNodeAncestors()//获取节点的祖先节点\r\n\t\t\tbus.$on('treeCheckNode', (params) => { //获取传递的参数并进行操作\r\n\t\t\t\tlet treeNode = params.treeItem\r\n\t\t\t\ttreeNode.children = params.children\r\n\t\t\t\tif(_this.multiple){\r\n\t\t\t\t\t_this.treeCheckNode.push(treeNode)\r\n\t\t\t\t\t_this.checkedIds.push(treeNode.id)\r\n\t\t\t\t}else{\r\n\t\t\t\t\t_this.treeCheckNode = [treeNode]\r\n\t\t\t\t\t_this.checkedIds = [treeNode.id]\r\n\t\t\t\t}\r\n\t\t\t\t_this.$emit(\"checkNode\",{\r\n\t\t\t\t\tcheckList:_this.treeCheckNode,\r\n\t\t\t\t\tcheckNode:treeNode\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tbus.$on('treeNoCheckNode', (params) => { //获取传递的参数并进行操作\r\n\t\t\t\tlet treeNode = params.treeItem\r\n\t\t\t\ttreeNode.children = params.children\r\n\t\t\t\tif(_this.multiple){\r\n\t\t\t\t\tconst checkIndex = _this.treeCheckNode.findIndex(item => item.id === treeNode.id),\r\n\t\t\t\t\t\t  checkedIdsIndex = _this.checkedIds.indexOf(treeNode.id)\r\n\t\t\t\t\t_this.treeCheckNode.splice(checkIndex, 1)\r\n\t\t\t\t\t_this.checkedIds.splice(checkedIdsIndex, 1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\t_this.treeCheckNode = []\r\n\t\t\t\t\t_this.checkedIds = []\r\n\t\t\t\t}\r\n\t\t\t\t_this.$emit(\"unCheckNode\",{\r\n\t\t\t\t\tcheckList:_this.treeCheckNode,\r\n\t\t\t\t\tcheckNode:treeNode\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":""}